# ============================================================================
# ECHOTUNE AI - COMPREHENSIVE ENVIRONMENT CONFIGURATION
# Updated for n8n integration with https://primosphere.ninja
# ============================================================================


# Core API Keys and Tools - UPDATED WITH GITHUB SECRETS
PERPLEXITY_API_KEY=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
BRAVE_API_KEY=BSAQ0gsYuaYuEZHayb_Ek1pnl1l2RiW
BROWSERBASE_API_KEY=bb_live_P4BWp-i1Atz_NMBWXr521kxcrXw
BROWSERBASE_PROJECT_ID=df31bafd-8541-40f2-80a8-2f6ea30df60e
BROWSERBASE_SESSION_ID=auto-generate

# GitHub Integration - FROM GITHUB SECRETS
GITHUB_PAT=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
GITHUB_API_KEY=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
CURSOR_API_KEY=key_694009601be9f42adc51e02c9d5a4e27828043679cd397039c7496e07f00b705
GEMINI_API_KEY=AIzaSyAVqHaHBRos1lRKk5hi62mC9W7ssz3bzTw
DIGITALOCEAN_API_TOKEN=dop_v1_7f3ffbb832d366adc5ac681ee67e9ec8d85350704fb5d69154d8120de9ba64f0
E2B_API_KEY=e2b_d4bd1880d1447d46bc054503cb7822a17e30c26f
N8N_API_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIzNjg4N2M4Yy0wMmNhLTQ1ZGMtOGJiYy00OGQ2OTZiOTA2M2EiLCJpc3MiOiJuOG4iLCJhdWQiOiJwdWJsaWMtYXBpIiwiaWF0IjoxNzU1NDgzMDM3LCJleHAiOjE3NTc5OTUyMDB9.YB3-9YlDP4fOgspsenl0wEAUvSYBg8YyLeCUx09AC8w

# ============================================================================
# N8N AUTOMATION PLATFORM CONFIGURATION
# Primary Instance: https://primosphere.ninja
# Community Nodes Installed:
#   - @kenkaiii/n8n-nodes-supercode (v1.0.83) - Super Code, Super Code Tool
#   - n8n-nodes-deepseek (v1.0.6) - DeepSeek
#   - n8n-nodes-mcp - MCP Client
# ============================================================================

# Primary n8n Configuration
N8N_API_URL=https://primosphere.ninja
N8N_API_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIzNjg4N2M4Yy0wMmNhLTQ1ZGMtOGJiYy00OGQ2OTZiOTA2M2EiLCJpc3MiOiJuOG4iLCJhdWQiOiJwdWJsaWMtYXBpIiwiaWF0IjoxNzU1NDgzMDM3LCJleHAiOjE3NTc5OTUyMDB9.YB3-9YlDP4fOgspsenl0wEAUvSYBg8YyLeCUx09AC8w
N8N_USERNAME=willexmen8@gmail.com
N8N_PASSWORD=DapperMan77$$
N8N_MCP_PORT=3019

# Webhook Base URL for n8n workflows
N8N_WEBHOOK_BASE_URL=https://primosphere.ninja/webhook

# Community Node Configuration
N8N_SUPERCODE_ENABLED=true
N8N_DEEPSEEK_ENABLED=true
N8N_MCP_CLIENT_ENABLED=true

# ============================================================================
# AI/ML SERVICES CONFIGURATION
# ============================================================================

# OpenAI Services - FROM GITHUB SECRETS (if available)
OPENAI_API_KEY=sk-your-openai-key-here
OPENAI_ORGANIZATION_ID=org-your-openai-org-here
OPENAI_MODEL=gpt-4-turbo-preview

# Google Gemini - UPDATED WITH MULTIPLE KEYS
GEMINI_API_KEY=AIzaSyAVqHaHBRos1lRKk5hi62mC9W7ssz3bzTw
GEMINI_API_KEY_2=AIzaSyChRuLP-xS8ucyyu1xbBiE-hrHTti_Ks5E
GEMINI_API_KEY_3=AIzaSyBFKq4XRb505EOdPiy3O7Gt3D192siUr30
GEMINI_API_KEY_4=AIzaSyA_rZoxcgGK_7H-lTMzV5oJqoU_vrZfSSc
GEMINI_API_KEY_5=AIzaSyBWZMFT-QRim0VYkB_610mMJix13s01ynk
GEMINI_API_KEY_6=AIzaSyAKlbqhApEri0ZVKIv5ZGrMrEULLrYQWPM
GEMINI_MODEL=gemini-pro

# DeepSeek (for n8n-nodes-deepseek integration)
DEEPSEEK_API_KEY=sk-your-deepseek-key-here
DEEPSEEK_BASE_URL=https://api.deepseek.com

# Anthropic Claude
ANTHROPIC_API_KEY=sk-ant-your-anthropic-key-here

# OpenRouter - MULTIPLE KEYS FROM DOCUMENTATION
OPENROUTER_API_KEY=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
OPENROUTER_API_KEY_2=sk-or-v1-3e798d593ede901dadbd0bee0b4ec69f7e90930f33b23be3c865893c2a11297dv
OPENROUTER_API_KEY_3=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

# ============================================================================
# SPOTIFY API CONFIGURATION - FROM GITHUB SECRETS
# ============================================================================
SPOTIFY_CLIENT_ID=dcc2df507bde447c93a0199358ca219d
SPOTIFY_CLIENT_SECRET=128089720b414d1e8233290d94fb38a0
SPOTIFY_REDIRECT_URI=https://yourdomain.com/callback
SPOTIFY_ACCESS_TOKEN=your-spotify-access-token
SPOTIFY_REFRESH_TOKEN=your-spotify-refresh-token

# ============================================================================
# DATABASE CONFIGURATIONS
# ============================================================================

# MongoDB Atlas (Primary Database) - VALIDATED AND UPDATED
MONGODB_URI=mongodb+srv://copilot:DapperMan77@cluster0.ofnyuy.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
MONGODB_DATABASE=echotune
MONGODB_CONNECTION_TIMEOUT=30000

# Redis Cloud (Caching & Session Management) - FROM DOCUMENTATION  
REDIS_URL=redis://default:wZSsoenleylqrJAarlo8xnPaTAUdSqxg@redis-11786.crce175.eu-north-1-1.ec2.redns.redis-cloud.com:11786
REDIS_PASSWORD=wZSsoenleylqrJAarlo8xnPaTAUdSqxg
REDIS_HOST=redis-11786.crce175.eu-north-1-1.ec2.redns.redis-cloud.com
REDIS_PORT=11786
REDIS_DATABASE=0

# JWT Configuration - FROM DOCUMENTATION
JWT_SECRET=fb66bf34fc84939cc49bf532a573169ee05c70e4f628d1d8b940cab82d5c030f

# Supabase (Secondary Database & Real-time Features)
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# ============================================================================
# MCP (MODEL CONTEXT PROTOCOL) SERVERS
# ============================================================================

# MCP Server Registry
MCP_SERVER_PORT=3001
MCP_SERVERS_CONFIG_PATH=./mcp-servers-config.json

# Individual MCP Server Configurations
MCP_FILESYSTEM_ENABLED=true
MCP_PUPPETEER_ENABLED=true
MCP_PACKAGE_MANAGEMENT_ENABLED=true
MCP_ANALYTICS_ENABLED=true
MCP_CODE_SANDBOX_ENABLED=true

# Puppeteer MCP Server
PUPPETEER_MCP_PORT=3002
PUPPETEER_HEADLESS=true
PUPPETEER_TIMEOUT=30000

# Package Management MCP Server
PACKAGE_MCP_PORT=3003
NPM_REGISTRY_URL=https://registry.npmjs.org/

# Analytics MCP Server
ANALYTICS_MCP_PORT=3004
TELEMETRY_ENDPOINT=https://your-telemetry-endpoint.com

# ============================================================================
# GITHUB INTEGRATION - UPDATED WITH CURRENT TOKENS
# ============================================================================
GITHUB_TOKEN=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
GITHUB_WEBHOOK_SECRET=your-webhook-secret
GITHUB_OWNER=dzp5103
GITHUB_REPO=Spotify-echo

# ============================================================================
# BROWSER AUTOMATION & TESTING
# ============================================================================

# Playwright Configuration
PLAYWRIGHT_BROWSERS_PATH=/opt/playwright
PLAYWRIGHT_HEADLESS=true
PLAYWRIGHT_TIMEOUT=30000

# Stagehand Browser Automation
STAGEHAND_API_KEY=your-stagehand-key
STAGEHAND_ENABLED=true

# ============================================================================
# SECURITY & AUTHENTICATION
# ============================================================================

# JWT Configuration - FROM DOCUMENTATION  
JWT_SECRET=fb66bf34fc84939cc49bf532a573169ee05c70e4f628d1d8b940cab82d5c030f
JWT_EXPIRATION=24h
JWT_REFRESH_EXPIRATION=7d

# Session Configuration
SESSION_SECRET=8bc7ed90aa90543fb9f1bfuehhgfrrt8bc7ed90aa90543fb9f1bfuehhgfrrt
SESSION_MAX_AGE=86400000

# API Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ============================================================================
# DEPLOYMENT & INFRASTRUCTURE
# ============================================================================

# Application Configuration
NODE_ENV=production
PORT=3000
HOST=0.0.0.0

# DigitalOcean Configuration - UPDATED WITH CURRENT TOKEN
DIGITALOCEAN_TOKEN=dop_v1_7f3ffbb832d366adc5ac681ee67e9ec8d85350704fb5d69154d8120de9ba64f0
DIGITALOCEAN_SPACE_KEY=your-spaces-key
DIGITALOCEAN_SPACE_SECRET=your-spaces-secret
DIGITALOCEAN_REGION=nyc3

# Docker Configuration
DOCKER_IMAGE=echotune-ai:latest
DOCKER_REGISTRY=registry.digitalocean.com/your-registry

# Nginx Configuration
NGINX_SERVER_NAME=yourdomain.com
NGINX_SSL_CERT_PATH=/etc/letsencrypt/live/yourdomain.com/fullchain.pem
NGINX_SSL_KEY_PATH=/etc/letsencrypt/live/yourdomain.com/privkey.pem

# ============================================================================
# MONITORING & LOGGING
# ============================================================================

# Logging Configuration
LOG_LEVEL=info
LOG_FILE=logs/app.log
ERROR_LOG_FILE=logs/error.log

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30000
HEALTH_CHECK_TIMEOUT=5000

# Metrics & Analytics
METRICS_ENABLED=true
ANALYTICS_TRACKING_ID=GA-your-tracking-id

# ============================================================================
# DEVELOPMENT & TESTING
# ============================================================================

# Development Mode
DEV_MODE=false
DEBUG_MODE=false
HOT_RELOAD=false

# Testing Configuration
TEST_DATABASE_URL=mongodb://localhost:27017/echotune-test
TEST_REDIS_URL=redis://localhost:6379/1
JEST_TIMEOUT=30000

# ============================================================================
# FEATURE FLAGS & EXPERIMENTAL FEATURES
# ============================================================================

# AI/ML Features
RECOMMENDATION_ENGINE_ENABLED=true
CONVERSATIONAL_AI_ENABLED=true
REAL_TIME_PROCESSING_ENABLED=true

# Integration Features
SPOTIFY_INTEGRATION_ENABLED=true
GITHUB_INTEGRATION_ENABLED=true
N8N_AUTOMATION_ENABLED=true
MCP_ECOSYSTEM_ENABLED=true

# Performance Features
CACHING_ENABLED=true
CDN_ENABLED=false
COMPRESSION_ENABLED=true

# ============================================================================
# ADDITIONAL TOOL INTEGRATIONS
# ============================================================================

# Email Services (for notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# Slack Integration (for alerts)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/slack/webhook
SLACK_CHANNEL=#alerts

# Discord Integration (for community)
DISCORD_BOT_TOKEN=your-discord-bot-token
DISCORD_GUILD_ID=your-discord-guild-id

# Twilio (for SMS notifications)
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=+1234567890

# ============================================================================
# GOOGLE CLOUD / VERTEX AI - For AI/ML features integration
# ============================================================================
# IMPORTANT: Configure these to exit mock mode and use real Vertex AI models

# Basic GCP Configuration (REQUIRED)
# Set your actual GCP project ID here to enable Vertex AI
GCP_PROJECT_ID=spotify-echo-ai-project
GCP_VERTEX_LOCATION=us-central1

# Authentication Options (Choose one):
# Option 1: Application Default Credentials (Recommended for development)
#   Run: gcloud auth application-default login
# Option 2: Service Account Key File
#   Set path to your service account JSON key file
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json

# Production Vertex AI Configuration (Auto-populated by bootstrap)
GCP_PROJECT_NUMBER=
WORKLOAD_IDENTITY_PROVIDER=
GCP_SERVICE_ACCOUNT=
GCP_VERTEX_BUCKET=

# Bootstrap Configuration (For automated setup)
# Temporary bootstrap service account key (base64 encoded)
# Required roles: roles/owner or custom role with required permissions
GCP_BOOTSTRAP_SA_KEY=

# AI Model Configuration
VERTEX_PRIMARY_TEXT_MODEL=text-bison@latest
VERTEX_EMBED_MODEL=textembedding-gecko@latest
VERTEX_RECOMMENDER_MODEL=text-bison@latest

# Vertex AI Performance Settings
VERTEX_ENDPOINT_TIMEOUT=1800
VERTEX_MIN_REPLICAS=1
VERTEX_MAX_REPLICAS=3
VERTEX_MACHINE_TYPE=n1-standard-2

# Development Overrides
VERTEX_DEV_MIN_REPLICAS=0
VERTEX_DEV_MAX_REPLICAS=1
VERTEX_DEV_MACHINE_TYPE=n1-standard-1

# Model Registry and Pricing
AI_PRICING_TABLE_PATH=config/ai/pricing.json
VERTEX_REGISTRY_PATH=config/ai/vertex_registry.json

# AI Service Configuration
AI_CIRCUIT_BREAKER_ENABLED=true
AI_RETRY_MAX_ATTEMPTS=3
AI_RETRY_BASE_DELAY=1000
AI_TIMEOUT_MS=30000
AI_ENABLE_COST_TRACKING=true
AI_ENABLE_METRICS=true

# Disable mock mode when GCP is properly configured
AI_MOCK_MODE=false
GCP_CREDENTIALS_VALIDATED=false
\n# Forcing Gemini to use Vertex AI for integration tests\nGEMINI_USE_VERTEX=true
