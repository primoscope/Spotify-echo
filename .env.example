# EchoTune AI - Environment Variables (example)
# Copy this file to .env and fill in values

#
# Core Server
#
NODE_ENV=development
PORT=3000
HOST=0.0.0.0

# External domain for production (e.g., your apex/root domain)
# Used to compute default Spotify redirect in prod when SPOTIFY_REDIRECT_URI is not set
DOMAIN=your-domain.com

# Public site URL (frontend base URL). In production, set to https://your-domain.com
# Used in settings pages and external links; does not affect server bind address
FRONTEND_URL=http://localhost:3000

#
# Authentication & Security
#
# Generate strong secrets in production:
#   openssl rand -base64 32
JWT_SECRET=change-me-in-production
SESSION_SECRET=change-me-in-production

#
# Spotify OAuth
#
# Register your app at https://developer.spotify.com/dashboard
SPOTIFY_CLIENT_ID=
SPOTIFY_CLIENT_SECRET=

# Canonical callback used by the app. Defaults:
# - Dev:      http://localhost:3000/auth/callback
# - Prod:     https://${DOMAIN}/auth/callback
# You can override via SPOTIFY_REDIRECT_URI if your domain differs.
SPOTIFY_REDIRECT_URI=

#
# Databases & Cache
#
# MongoDB (optional, recommended for analytics). Example Atlas URI:
# MONGODB_URI=mongodb+srv://user:pass@cluster.mongodb.net/echotune?retryWrites=true&w=majority
MONGODB_URI=
MONGODB_DATABASE=echotune_ai

# Redis URL for sessions and caching (recommended). Example Redis Cloud URL:
# redis://default:password@host:port
REDIS_URL=

#
# AI Providers (optional; enable features when present)
#
OPENAI_API_KEY=
GOOGLE_API_KEY=
PERPLEXITY_API_KEY=
XAI_API_KEY=

#
# Build/Runtime
#
LOG_LEVEL=info
MAX_REQUEST_SIZE=10mb
CORS_ORIGINS=

#
# Deployment notes for OAuth redirect URIs
#
# Spotify Redirect URIs to configure in the Spotify Dashboard:
# - Development (local):  http://localhost:3000/auth/callback
# - DigitalOcean (prod):  https://YOUR_DO_DOMAIN/auth/callback
# - Vercel (frontend only): https://YOUR_VERCEL_DOMAIN/auth/callback
#   Note: When hosting frontend on Vercel and backend elsewhere, ensure
#   the callback points to the backend domain that serves the Express app.

# ==============================
# EchoTune AI - Environment File
# ==============================
# Copy to .env and fill values. Used by docker-compose and app.

# --- Core Server ---
NODE_ENV=production
PORT=3000
HOST=0.0.0.0
DOMAIN=your-domain.com
FRONTEND_URL=https://your-domain.com
MAX_REQUEST_SIZE=10mb
COMPRESSION=true

# --- Security ---
SESSION_SECRET=change_me_to_a_long_random_string
JWT_SECRET=change_me_to_a_long_random_string
LOG_LEVEL=info

# --- MongoDB ---
# For docker-compose internal network
MONGODB_DATABASE=echotune_production
MONGO_PORT=27017
# NOTE: .env files do not support nested variable expansion
# Keep MONGODB_URI in sync with MONGODB_DATABASE manually
MONGODB_URI=mongodb://mongo:27017/echotune_production

# --- Redis ---
REDIS_PORT=6379
REDIS_PASSWORD=echotune_redis_pass
# NOTE: .env files do not expand other variables in values
# Keep REDIS_URL password in sync with REDIS_PASSWORD manually
REDIS_URL=redis://:echotune_redis_pass@redis:6379
REDIS_KEY_PREFIX=echotune:

# --- Spotify OAuth (optional but recommended) ---
SPOTIFY_CLIENT_ID=your-spotify-client-id
SPOTIFY_CLIENT_SECRET=your-spotify-client-secret
SPOTIFY_REDIRECT_URI=https://${DOMAIN}/auth/callback

# --- LLM Providers (optional) ---
OPENAI_API_KEY=
GOOGLE_API_KEY=
PERPLEXITY_API_KEY=
XAI_API_KEY=
DEFAULT_LLM_PROVIDER=openai

# --- Frontend build-time variables (Vite) ---
# Used by Vercel static build to point Socket.IO client at your backend
VITE_SOCKET_URL=https://api.your-domain.com

# --- Feature Flags ---
ENABLE_RECOMMENDATIONS=true
ENABLE_PLAYLIST_CREATION=true
ENABLE_USER_ANALYTICS=true
ENABLE_CHAT_HISTORY=true

# --- Rate Limiting ---
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
AUTH_RATE_LIMIT_MAX=5

# --- Observability ---
AGENTOPS_API_KEY=
ENABLE_DEMO_ROUTES=0

# --- CORS ---
CORS_ORIGINS=https://${DOMAIN},https://www.${DOMAIN}

# --- Optional External Services ---
N8N_API_URL=
N8N_API_KEY=
BROWSERBASE_API_KEY=
BROWSERBASE_PROJECT_ID=

# --- DO App Platform Hints ---
# DigitalOcean will map these from their UI. This file ensures docker-compose parity.