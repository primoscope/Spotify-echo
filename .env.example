# EchoTune AI Environment Configuration
# Copy this file to .env and update with your values

# =============================================================================
# üöÄ BASIC DEPLOYMENT SETTINGS  
# =============================================================================

# Application Environment
NODE_ENV=production
PORT=3000
DOMAIN=your-domain.com
FRONTEND_URL=https://your-domain.com

# =============================================================================
# üåê SSL & NGINX CONFIGURATION
# =============================================================================

# SSL Certificate Configuration
SSL_ENABLED=true
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/key.pem
SSL_CHAIN_PATH=/etc/nginx/ssl/chain.pem
SSL_EMAIL=admin@your-domain.com

# Nginx Configuration
NGINX_WORKER_PROCESSES=auto
NGINX_WORKER_CONNECTIONS=1024
MAX_REQUEST_SIZE=10m

# Rate Limiting
API_RATE_LIMIT=50r/s
AUTH_RATE_LIMIT=10r/m
GENERAL_RATE_LIMIT=100r/s

# Backend Configuration
BACKEND_HOST=app
BACKEND_PORT=3000

# =============================================================================
# üéµ SPOTIFY CONFIGURATION (REQUIRED)
# =============================================================================

# Get these from https://developer.spotify.com/dashboard
SPOTIFY_CLIENT_ID=your_spotify_client_id_here
SPOTIFY_CLIENT_SECRET=your_spotify_client_secret_here
SPOTIFY_REDIRECT_URI=http://localhost:3000/auth/callback

# =============================================================================
# üîí SECURITY SECRETS (GENERATE UNIQUE VALUES)
# =============================================================================

# Generate random strings for these secrets
SESSION_SECRET=generate_a_random_string_here
JWT_SECRET=generate_another_random_string_here

# =============================================================================
# üóÑÔ∏è DATABASE CONFIGURATION (ENHANCED MONGODB UTILIZATION)
# =============================================================================

# MongoDB Configuration (Primary Database)
MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/echotune
MONGODB_DB_NAME=echotune
MONGODB_MAX_POOL_SIZE=10
MONGODB_MIN_POOL_SIZE=5
MONGODB_MAX_IDLE_TIME=30000
MONGODB_CONNECT_TIMEOUT=10000
MONGODB_SOCKET_TIMEOUT=0

# MongoDB Collections Configuration
MONGODB_COLLECTIONS_PREFIX=echotune_
ENABLE_MONGODB_ANALYTICS=true
MONGODB_ANALYTICS_RETENTION_DAYS=90

# Redis Configuration (Enhanced Caching)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your_redis_password
REDIS_DB_INDEX=0
REDIS_KEY_PREFIX=echotune:
REDIS_DEFAULT_TTL=3600

# Database Features
DATABASE_TYPE=mongodb
ENABLE_SQLITE_FALLBACK=true
ENABLE_DATABASE_ANALYTICS=true
ENABLE_QUERY_LOGGING=false
DATABASE_BACKUP_ENABLED=true
DATABASE_BACKUP_INTERVAL=24h

# =============================================================================
# ü§ñ AI PROVIDERS (ENHANCED WITH MULTIPLE PROVIDERS)
# =============================================================================

# Default LLM Provider Configuration
DEFAULT_LLM_PROVIDER=openai
LLM_PROVIDER_FALLBACK=gemini,mock

# OpenAI Configuration
OPENAI_API_KEY=sk-your_openai_api_key_here
OPENAI_MODEL=gpt-4-turbo
OPENAI_MAX_TOKENS=2000
OPENAI_TEMPERATURE=0.7
OPENAI_RATE_LIMIT=60

# Google Gemini Configuration
GEMINI_API_KEY=your_gemini_api_key_here
GEMINI_MODEL=gemini-1.5-pro
GEMINI_MAX_TOKENS=2000
GEMINI_TEMPERATURE=0.7
GEMINI_RATE_LIMIT=60

# OpenRouter Configuration (Multiple Models)
OPENROUTER_API_KEY=sk-or-your_openrouter_api_key_here
OPENROUTER_MODEL=anthropic/claude-3.5-sonnet
OPENROUTER_SITE_URL=https://your-domain.com
OPENROUTER_APP_NAME=EchoTune AI

# Anthropic Claude Configuration
ANTHROPIC_API_KEY=sk-ant-your_anthropic_api_key_here
ANTHROPIC_MODEL=claude-3-sonnet-20240229
ANTHROPIC_MAX_TOKENS=2000

# LLM Provider Features
ENABLE_PROVIDER_SWITCHING=true
ENABLE_MODEL_SELECTION=true
LLM_RESPONSE_CACHE_TTL=300
LLM_RETRY_ATTEMPTS=3
LLM_TIMEOUT=30000

# =============================================================================
# üê≥ DOCKER HUB CREDENTIALS (FOR CONTAINER REGISTRY)
# =============================================================================

# Required for pushing to Docker Hub
DOCKER_HUB_USERNAME=your_dockerhub_username
DOCKER_HUB_TOKEN=your_dockerhub_access_token

# Container registry settings
DOCKER_REGISTRY=docker.io
DOCKER_REPOSITORY=your_username/echotune-ai

# =============================================================================
# üåê PRODUCTION OPTIMIZATION & MONITORING
# =============================================================================

# Performance Settings
COMPRESSION=true
CACHE_ENABLED=true
RATE_LIMIT_ENABLED=true
CLUSTER_ENABLED=false
WORKER_PROCESSES=auto

# Security Configuration
ENABLE_SECURITY_HEADERS=true
FORCE_HTTPS=true
ENABLE_CORS=true
CORS_ORIGINS=https://your-domain.com,https://www.your-domain.com
CSP_ENABLED=true

# Health Check & Monitoring
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30000
METRICS_ENABLED=true
PROMETHEUS_ENABLED=false
PROMETHEUS_PORT=9090

# Logging Configuration
LOG_LEVEL=info
LOG_FORMAT=combined
ENABLE_REQUEST_LOGGING=true
ENABLE_ERROR_TRACKING=true
LOG_ROTATION_ENABLED=true
LOG_MAX_SIZE=100MB
LOG_MAX_FILES=10

# Application Features
ENABLE_ANALYTICS_DASHBOARD=true
ENABLE_REALTIME_UPDATES=true
ENABLE_BACKGROUND_TASKS=true
ENABLE_FILE_UPLOADS=true
MAX_FILE_SIZE=50MB

# =============================================================================
# üîß MCP SERVER INTEGRATION CONFIGURATION
# =============================================================================

# GitHub MCP Server Integration
GITHUB_PAT=your_github_personal_access_token
GITHUB_API_URL=https://api.github.com

# Database MCP Servers
DATABASE_URL=postgresql://username:password@localhost:5432/echotune
SQLITE_DB_PATH=data/echotune.db

# Search & Web Integration
BRAVE_API_KEY=your_brave_search_api_key
YOUTUBE_API_KEY=your_youtube_api_key

# Browser Automation
BROWSERBASE_API_KEY=your_browserbase_api_key
BROWSERBASE_PROJECT_ID=your_browserbase_project_id
BROWSERBASE_SESSION_ID=your_browserbase_session_id

# Additional MCP Server APIs
INFLUXDB_URL=http://localhost:8086
INFLUXDB_TOKEN=your_influxdb_token
LANGFUSE_PUBLIC_KEY=your_langfuse_public_key
LANGFUSE_SECRET_KEY=your_langfuse_secret_key

# MCP Server Configuration
MCP_SERVER_PORT=3001
MCP_SERVER_HOST=localhost
ENABLE_MCP_LOGGING=true
MCP_TIMEOUT=30000

# =============================================================================
# üìä ANALYTICS & INSIGHTS CONFIGURATION
# =============================================================================

# User Analytics
ENABLE_USER_ANALYTICS=true
ANALYTICS_RETENTION_DAYS=365
TRACK_USER_BEHAVIOR=true
ENABLE_LISTENING_INSIGHTS=true

# Music Analytics
ENABLE_MUSIC_ANALYTICS=true
TRACK_PLAY_COUNTS=true
ANALYZE_LISTENING_PATTERNS=true
GENERATE_RECOMMENDATIONS_INSIGHTS=true

# Dashboard Configuration
DASHBOARD_REFRESH_INTERVAL=30000
ENABLE_REAL_TIME_CHARTS=true
CHART_DATA_POINTS=100
ENABLE_DATA_EXPORT=true

# =============================================================================
# üí° QUICK START EXAMPLES
# =============================================================================

# Development (minimal setup):
# NODE_ENV=development
# PORT=3000
# SPOTIFY_CLIENT_ID=your_id
# SPOTIFY_CLIENT_SECRET=your_secret

# Production (recommended setup):
# NODE_ENV=production  
# DOMAIN=yourdomain.com
# SPOTIFY_CLIENT_ID=your_id
# SPOTIFY_CLIENT_SECRET=your_secret
# SESSION_SECRET=random_string_1
# JWT_SECRET=random_string_2
# MONGODB_URI=mongodb+srv://...
# =============================================================================
# üåä DIGITALOCEAN CONFIGURATION
# =============================================================================

# DigitalOcean API Token (get from https://cloud.digitalocean.com/account/api/tokens)
DIGITALOCEAN_API_TOKEN=dop_v1_09dc79ed930e1cc77ffe866d78a3c5eae14ab6f8fa47389beef94e19cb049eae
DIGITALOCEAN_REGISTRY_EMAIL=barrunmail@gmail.com
DIGITALOCEAN_REGISTRY_TOKEN=dop_v1_be1d6c7989e8f51fefbae284c017fa7eaeea5d230e59d7c399b220d4677652c7
DIGITALOCEAN_CALLBACK_URL=http://localhost:3000/

