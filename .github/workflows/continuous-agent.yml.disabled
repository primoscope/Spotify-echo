name: Continuous Coding Agent Workflow

on:
  push:
    paths:
      - 'agent-workflow/**'
    branches: [main]
  workflow_dispatch:
    inputs:
      mode:
        description: 'Execution mode'
        required: false
        default: 'full'
        type: choice
        options:
          - full
          - analyze
          - create-issue
          - status
      force_run:
        description: 'Force run even if disabled'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '20'
  GH_PAT: ${{ secrets.GH_PAT }}

jobs:
  continuous-agent:
    name: Continuous Coding Agent
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    # Only run if files in agent-workflow changed or manually triggered
    if: |
      github.event_name == 'workflow_dispatch' || 
      contains(github.event.head_commit.modified, 'agent-workflow/') ||
      contains(github.event.head_commit.added, 'agent-workflow/')
    
    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: write
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 50  # Get more history for PR analysis
          token: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}
      
      - name: Configure Git
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          echo "✅ Git configured for automated operations"
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install Dependencies
        run: |
          npm ci
          echo "✅ Dependencies installed"
      
      - name: Validate Configuration
        run: |
          if [ ! -f "agent-workflow/config/config.json" ]; then
            echo "❌ Configuration file not found"
            exit 1
          fi
          
          node -e "
            const config = require('./agent-workflow/config/config.json');
            if (!config.enabled && !${{ github.event.inputs.force_run || 'false' }}) {
              console.log('⏸️ Continuous agent is disabled');
              process.exit(78); // Skip step
            }
            console.log('✅ Configuration valid');
          "
      
      - name: Check GitHub Token
        run: |
          if [ -z "${{ secrets.GH_PAT }}" ]; then
            echo "❌ GH_PAT  not configured"
            exit 1
          fi
          echo "✅ GitHub token configured"
      
      - name: Run Continuous Agent
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          mode="${{ github.event.inputs.mode || 'full' }}"
          echo "🚀 Running continuous agent in mode: $mode"
          
          node scripts/continuous-agent.js "$mode"
      
      - name: Upload Analysis Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: agent-workflow-results-${{ github.run_number }}
          path: |
            agent-workflow/summaries/
            agent-workflow/tasks/
            agent-workflow/prompts/
            agent-workflow/progress/
            agent-workflow/current-status.json
          retention-days: 30
      
      - name: Update Status Badge
        if: always()
        run: |
          # Create a simple status indicator
          if [ ${{ job.status }} == "success" ]; then
            status="passing"
            color="brightgreen"
          else
            status="failing"
            color="red"
          fi
          
          echo "🏷️ Workflow status: $status"
          # Could integrate with shields.io or similar service here
      
      - name: Post Success Comment
        if: success() && github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const fs = require('fs');
            
            try {
              // Read the current status
              const statusPath = 'agent-workflow/current-status.json';
              const status = JSON.parse(fs.readFileSync(statusPath, 'utf8'));
              
              // Create a comment if this was triggered by a push to main
              const comment = `🤖 **Continuous Coding Agent - Cycle ${status.cycle}**
              
              ✅ Successfully completed automatic development cycle
              
              **Summary:**
              - 📊 Cycle: ${status.cycle}
              - 📝 Status: ${status.status}
              - 🎯 Next Action: ${status.next_action}
              - ⏰ Updated: ${status.last_updated}
              
              The coding agent has analyzed recent changes and prepared new development tasks.
              
              *Automated by [Continuous Coding Agent Workflow](${context.payload.repository.html_url}/actions/runs/${context.runId})*`;
              
              // Find the latest commit and add a comment
              const { data: commits } = await github.rest.repos.listCommits({
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 1
              });
              
              if (commits.length > 0) {
                await github.rest.repos.createCommitComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  commit_sha: commits[0].sha,
                  body: comment
                });
              }
            } catch (error) {
              console.log('Could not post comment:', error.message);
            }
      
      - name: Handle Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const comment = `🚨 **Continuous Coding Agent Failed**
            
            ❌ The automatic development cycle encountered an error.
            
            **Details:**
            - 🔍 Check the [workflow logs](${context.payload.repository.html_url}/actions/runs/${context.runId}) for details
            - 📊 Review the agent-workflow/current-status.json for error information
            - 🛠️ Manual intervention may be required
            
            *Failed run: [${context.runId}](${context.payload.repository.html_url}/actions/runs/${context.runId})*`;
            
            // Create an issue for the failure
            try {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `🚨 Continuous Agent Failure - Run ${context.runId}`,
                body: comment,
                labels: ['bug', 'continuous-agent', 'automated']
              });
            } catch (error) {
              console.log('Could not create failure issue:', error.message);
            }

  # Job to trigger based on specific file changes
  check-trigger-conditions:
    name: Check Trigger Conditions  
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    outputs:
      should-trigger: ${{ steps.check.outputs.should-trigger }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}
      
      - name: Check for Agent Workflow Changes
        id: check
        run: |
          # Check if any files in agent-workflow directory were modified
          changed_files=$(git diff --name-only HEAD~1 HEAD)
          
          echo "Changed files:"
          echo "$changed_files"
          
          if echo "$changed_files" | grep -q "agent-workflow/"; then
            echo "should-trigger=true" >> $GITHUB_OUTPUT
            echo "🎯 Agent workflow files changed - triggering continuous agent"
          else
            echo "should-trigger=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No agent workflow files changed"
          fi

  # Optional: Status reporting job
  status-report:
    name: Agent Status Report
    runs-on: ubuntu-latest
    needs: [continuous-agent]
    if: always() && (success() || failure())
    
    steps:
      - name: Generate Status Report
        run: |
          echo "📊 Continuous Coding Agent Status Report"
          echo "========================================="
          echo "🕐 Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo "🔧 Trigger: ${{ github.event_name }}"
          echo "📝 Status: ${{ needs.continuous-agent.result }}"
          echo "🎯 Run ID: ${{ github.run_id }}"
          echo "🌐 Repository: ${{ github.repository }}"
          echo "🔄 Commit: ${{ github.sha }}"
          
          if [ "${{ needs.continuous-agent.result }}" == "success" ]; then
            echo "✅ Continuous agent completed successfully"
          else
            echo "❌ Continuous agent failed or was skipped"
          fi