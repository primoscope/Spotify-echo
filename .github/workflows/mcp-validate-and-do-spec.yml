name: MCP Validation and DO Spec

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

concurrency:
  group: mcp-validate-and-do-spec-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-and-generate:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install jq and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          npm ci --no-audit --no-fund

      - name: Print tool versions
        run: |
          node -v
          npm -v
          python --version

      - name: Run MCP install/health/test/report
        run: |
          npm run mcp:validate
        env:
          # Optional envs; leave empty to avoid failures if not configured
          BROWSERBASE_API_KEY: ${{ secrets.BROWSERBASE_API_KEY || '' }}
          BROWSERBASE_PROJECT_ID: ${{ secrets.BROWSERBASE_PROJECT_ID || '' }}
          MONGODB_URI: ${{ secrets.MONGODB_URI || '' }}
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID || '' }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET || '' }}
        continue-on-error: true

      - name: Run enhanced MCP automation (filesystem + sequential)
        run: |
          node scripts/enhanced-mcp-automation.js --filesystem --sequential --report --optimize --no-interactive || true

      - name: Generate DigitalOcean App Platform spec
        run: |
          chmod +x scripts/deploy/do-app-platform-spec.sh
          ./scripts/deploy/do-app-platform-spec.sh validate
          ./scripts/deploy/do-app-platform-spec.sh generate production

      - name: Build frontend bundle
        run: npm run build

      - name: Archive reports and artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reports-and-artifacts
          if-no-files-found: warn
          path: |
            reports/**
            .do/app-platform.yaml
            mcp-install.log
            mcp_orchestrator.log
            dist/**

      - name: Summarize key outputs
        run: |
          echo "Reports directory:" && ls -la reports || true
          echo "DO spec:" && ls -la .do || true
          echo "Build artifacts:" && ls -la dist || true