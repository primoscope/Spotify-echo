---
name: Vertex AI WIF Validation

on:
  pull_request:
    types: [opened, synchronize, labeled, ready_for_review]
    branches: [main, develop]
    paths:
      - 'scripts/gcp/**'
      - 'scripts/vertex/**'
      - 'scripts/configure-gcp-credentials.js'
      - '.github/workflows/vertex-bootstrap.yml'
      - '.github/workflows/vertex-ai-wif-validation.yml'
  workflow_dispatch:
    inputs:
      test_vertex_access:
        description: "Test actual Vertex AI access (requires configured credentials)"
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION || 'us-central1' }}
  VERTEX_MODEL_ID: ${{ secrets.VERTEX_MODEL_ID || '' }}

jobs:
  validate-new-scripts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci --only=production

      - name: Validate Script Structure and Syntax
        run: |
          echo "üîç Validating new Vertex AI scripts..."
          
          # Check that required files exist
          required_files=(
            "scripts/gcp/setup_workload_identity.sh"
            "scripts/vertex/verify-vertex.js"
            "scripts/tests/test-vertex-config.mjs"
          )
          
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "‚ùå Missing required file: $file"
              exit 1
            else
              echo "‚úÖ Found: $file"
            fi
          done
          
          # Test bash script syntax
          echo "üß™ Testing bash script syntax..."
          bash -n scripts/gcp/setup_workload_identity.sh
          echo "‚úÖ Bash script syntax OK"
          
          # Test Node.js script syntax
          echo "üß™ Testing Node.js script syntax..."
          node -c scripts/vertex/verify-vertex.js
          node -c scripts/configure-gcp-credentials.js
          echo "‚úÖ Node.js script syntax OK"

      - name: Test Script Help Commands
        run: |
          echo "üß™ Testing script help commands..."
          
          # Test vertex verification help
          node scripts/vertex/verify-vertex.js help
          echo "‚úÖ Vertex verification help works"
          
          # Test configure credentials help (should include new commands)
          output=$(node scripts/configure-gcp-credentials.js help)
          if echo "$output" | grep -q "wif-setup"; then
            echo "‚úÖ Configure script includes wif-setup command"
          else
            echo "‚ùå Configure script missing wif-setup command"
            exit 1
          fi
          
          if echo "$output" | grep -q "vertex-verify"; then
            echo "‚úÖ Configure script includes vertex-verify command"
          else
            echo "‚ùå Configure script missing vertex-verify command"
            exit 1
          fi

      - name: Run Comprehensive Tests
        run: |
          echo "üß™ Running comprehensive validation tests..."
          node scripts/tests/test-vertex-config.mjs

      - name: Test Workload Identity Script (Dry Run)
        run: |
          echo "üß™ Testing Workload Identity script (dry run mode)..."
          
          export PROJECT_ID="test-project-12345"
          export PROJECT_NUMBER="123456789"
          export REPO_FULL_NAME="test-owner/test-repo"
          export DRY_RUN="true"
          
          # Should fail gracefully due to missing authentication
          if bash scripts/gcp/setup_workload_identity.sh 2>&1 | grep -q "No active gcloud authentication"; then
            echo "‚úÖ Script properly detects missing authentication"
          else
            echo "‚ùå Script did not handle missing authentication properly"
            exit 1
          fi

  auth-and-vertex-test:
    runs-on: ubuntu-latest
    needs: validate-new-scripts
    if: |
      (contains(github.event.pull_request.labels.*.name, 'copilot-coding-agent') ||
       contains(github.event.pull_request.labels.*.name, 'gcp-integration') ||
       github.event_name == 'workflow_dispatch') &&
      secrets.WIF_PROVIDER != ''
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci --only=production

      - name: Google Auth via Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          token_format: access_token
          access_token_lifetime: 600s

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: '>= 477.0.0'
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Verify Auth Identity
        run: |
          echo "üîç Verifying authentication..."
          echo "Active gcloud config:" 
          gcloud config list
          echo "Auth accounts:" 
          gcloud auth list
          echo "Project describe:" 
          gcloud projects describe "$GCP_PROJECT_ID" --format="value(projectId)"

      - name: Test New Vertex Verification Script
        run: |
          echo "üß™ Testing new Vertex AI verification script..."
          
          export GCP_PROJECT_ID="${{ env.GCP_PROJECT_ID }}"
          export GCP_VERTEX_LOCATION="${{ env.GCP_REGION }}"
          
          # Test the status command first
          node scripts/vertex/verify-vertex.js status
          
          # If vertex access test is requested, run the full verification
          if [ "${{ github.event.inputs.test_vertex_access }}" = "true" ]; then
            echo "üöÄ Running full Vertex AI verification..."
            if node scripts/vertex/verify-vertex.js; then
              echo "‚úÖ Vertex AI verification passed"
            else
              echo "‚ö†Ô∏è Vertex AI verification failed (may be expected if not fully configured)"
            fi
          else
            echo "‚è≠Ô∏è Skipping full verification (set test_vertex_access input to true to enable)"
          fi

      - name: List Vertex AI Models
        run: |
          echo "üìã Listing up to 5 Vertex AI models in region ${GCP_REGION}..."
          gcloud ai models list --region "${GCP_REGION}" \
            --format="table(displayName,versionId,createTime)" \
            --limit=5 || echo "Model list not available."

      - name: Test Workload Identity Setup (Dry Run)
        run: |
          echo "üß™ Testing Workload Identity setup with real credentials (dry run)..."
          
          export PROJECT_ID="${{ env.GCP_PROJECT_ID }}"
          export REPO_FULL_NAME="${{ github.repository }}"
          export DRY_RUN="true"
          
          # Test the script with real authentication but in dry run mode
          bash scripts/gcp/setup_workload_identity.sh

      - name: Optional Model Prediction Placeholder
        if: env.VERTEX_MODEL_ID != ''
        run: |
          echo "üî¨ VERTEX_MODEL_ID provided. Running placeholder prediction script."
          python3 scripts/vertex_health_check.py || true

      - name: Summary
        run: |
          echo "‚úÖ Vertex AI WIF validation completed successfully!"
          echo "üéâ New scripts are working correctly"
          echo ""
          echo "Available commands after these changes:"
          echo "  node scripts/configure-gcp-credentials.js wif-setup"
          echo "  node scripts/configure-gcp-credentials.js vertex-verify"
          echo "  node scripts/tests/test-vertex-config.mjs"

  # Fallback job when no WIF credentials are available
  basic-validation:
    runs-on: ubuntu-latest
    needs: validate-new-scripts
    if: |
      (contains(github.event.pull_request.labels.*.name, 'copilot-coding-agent') ||
       contains(github.event.pull_request.labels.*.name, 'gcp-integration') ||
       github.event_name == 'workflow_dispatch') &&
      secrets.WIF_PROVIDER == ''
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci --only=production

      - name: Run Tests Without Credentials
        run: |
          echo "üß™ Running basic validation without credentials..."
          echo "‚ö†Ô∏è No WIF credentials available - running limited tests"
          
          # Test vertex verification status without credentials
          export GCP_PROJECT_ID="test-project"
          node scripts/vertex/verify-vertex.js status
          
          echo "‚úÖ Basic validation completed"
          echo "üí° To test with real credentials, configure WIF_PROVIDER secret"