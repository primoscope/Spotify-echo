{
  "generated": "2025-08-17T15:38:57.902Z",
  "version": "2.0",
  "optimizedFor": "EchoTune AI - Music Platform with MCP Integration",
  "configuration": {
    "cursorrules": {
      "projectType": "EchoTune AI - Enhanced Music Platform with Browser Research",
      "techStack": "React 19 + Vite + Node.js 20 + Express + MongoDB + Redis + Python ML",
      "aiModelSelection": {
        "architecture": {
          "model": "Perplexity Sonar Pro",
          "use": "System design, database schema, API architecture, scalability planning",
          "context": "Include current architecture diagrams, performance requirements, browser research findings"
        },
        "codeGeneration": {
          "model": "Claude 3.5 Sonnet (preferred) or GPT-4",
          "use": "Complex business logic, React components, API endpoints",
          "context": "Include existing patterns, style guides, test requirements"
        },
        "quickFixes": {
          "model": "GPT-4-mini or Llama 3.1 8B",
          "use": "Bug fixes, simple utilities, documentation updates",
          "context": "Minimal context, focus on immediate task"
        },
        "research": {
          "model": "Perplexity Sonar Pro with Browser Research",
          "use": "Technology decisions, security research, performance optimization",
          "triggers": [
            "latest",
            "best practice",
            "security",
            "performance",
            "2024",
            "2025"
          ],
          "integration": "Always include current tech stack context, specific requirements, browser validation"
        }
      },
      "contextAwareness": {
        "highPriority": [
          "package.json",
          "vite.config.js",
          "server.js",
          "server-phase3.js",
          ".cursor/mcp.json",
          ".cursor/workflows/*.json",
          "src/server.js",
          "src/api/ai-integration/*.js",
          "src/frontend/App.jsx",
          "src/database/*.js",
          "tests/jest.config.js",
          "scripts/research/*.js"
        ],
        "dynamicContext": {
          "apiWork": "src/api/*, middleware patterns, error handling",
          "frontendWork": "src/frontend/*, component patterns, styling",
          "mlWork": "scripts/*, ml_datasets/, Python requirements",
          "mcpWork": "mcp-servers/*, integration patterns",
          "researchWork": "scripts/research/*, browser automation, validation"
        },
        "exclusions": "build artifacts, logs, generated documentation, node_modules",
        "contextWindow": "Monitor usage and trim less relevant files"
      },
      "developmentStandards": {
        "javascript": "ES2024+ features, const over let, template literals, React 19 concurrent features",
        "nodejs": "ES modules, comprehensive error handling, middleware patterns, async/await exclusively",
        "database": "MongoDB aggregation pipelines, proper indexing, Redis cache-aside pattern, transactions",
        "testing": ">80% coverage for business logic, React Testing Library, mock external dependencies",
        "security": "Input validation, rate limiting, HTTPS, proper OAuth, no hardcoded secrets"
      },
      "securityEnhancements": [
        "Input validation needed",
        "Rate limiting gaps"
      ],
      "performanceOptimizations": [
        "Database query optimization",
        "Caching improvements"
      ]
    },
    "workflowIntegration": {
      "automatedResearchTriggers": {
        "prEvents": [
          "opened",
          "synchronize",
          "labeled"
        ],
        "commands": [
          "/run-perplexity-research",
          "/analyze-security",
          "/performance-check"
        ],
        "labels": [
          "run-perplexity-research",
          "security-review",
          "performance-critical"
        ],
        "filePatterns": {
          "security": [
            "*.env*",
            "*/auth/*",
            "*/security/*",
            "package*.json"
          ],
          "performance": [
            "*/api/*",
            "*/database/*",
            "*/server*",
            "*.config.js"
          ],
          "dependencies": [
            "package*.json",
            "requirements*.txt",
            "Dockerfile"
          ]
        }
      },
      "qualityGates": {
        "preCommit": "ESLint, Prettier, security scan",
        "prValidation": "Tests, browser research validation, security check",
        "deployment": "Performance benchmarks, security validation, dependency audit"
      },
      "mcpServerIntegration": {
        "filesystem": "Code scanning and file analysis",
        "browser": "Real-time research validation and source verification",
        "analytics": "Performance monitoring and usage tracking",
        "packageManagement": "Dependency analysis and security scanning"
      }
    },
    "mcpIntegration": {
      "servers": {
        "perplexity-browser-research": {
          "command": "node",
          "args": [
            "scripts/research/perplexity-report.js"
          ],
          "capabilities": [
            "research",
            "browser-validation",
            "source-verification"
          ],
          "configuration": {
            "enableBrowserResearch": true,
            "models": [
              "sonar-pro",
              "sonar-small"
            ],
            "timeout": 150000,
            "caching": true
          }
        },
        "filesystem-enhanced": {
          "command": "filesystem-server",
          "capabilities": [
            "file-operations",
            "code-analysis",
            "pattern-detection"
          ],
          "whitelist": [
            "./src",
            "./scripts",
            "./mcp-servers",
            "./tests"
          ]
        },
        "analytics-integration": {
          "command": "analytics-server",
          "capabilities": [
            "performance-monitoring",
            "usage-tracking",
            "optimization-suggestions"
          ],
          "configuration": {
            "trackingEnabled": true,
            "optimizationMode": "development"
          }
        }
      },
      "workflows": {
        "research-validation": {
          "steps": [
            {
              "server": "filesystem-enhanced",
              "action": "scan",
              "scope": "changed-files"
            },
            {
              "server": "perplexity-browser-research",
              "action": "analyze",
              "depth": "deep"
            },
            {
              "server": "analytics-integration",
              "action": "track",
              "event": "research-completed"
            }
          ]
        }
      }
    },
    "researchAutomation": {
      "triggers": {
        "automatic": [
          "New npm packages or Python libraries detected",
          "Security-related file changes",
          "Performance issues >1s response time detected",
          "API integration patterns not in existing codebase",
          "Dependency vulnerabilities found"
        ],
        "manual": [
          "/run-perplexity-research - Full analysis with browser research",
          "/quick-research - Brief analysis without browser validation",
          "/security-research - Focus on security implications",
          "/performance-research - Focus on performance impact"
        ]
      },
      "browserResearchConfiguration": {
        "domains": [
          "github.com",
          "stackoverflow.com",
          "docs.anthropic.com",
          "developer.spotify.com",
          "mongodb.com",
          "redis.io"
        ],
        "validation": {
          "sourceCredibility": true,
          "contentFreshness": true,
          "crossReference": true
        },
        "caching": {
          "duration": "24h",
          "invalidateOn": "dependency-changes"
        }
      },
      "reportGeneration": {
        "format": "markdown",
        "sections": [
          "executive-summary",
          "cursor-ai-recommendations",
          "security-analysis",
          "performance-impact",
          "browser-research-findings",
          "implementation-guide"
        ],
        "citations": true,
        "actionableInsights": true
      }
    },
    "performanceOptimization": {
      "targets": {
        "apiEndpoints": "p95 < 500ms for simple queries, < 2s for complex",
        "frontendRendering": "First Contentful Paint < 1.5s",
        "databaseQueries": "Simple queries < 100ms, complex < 1s",
        "aiModelResponses": "< 3s for code generation, < 10s for research",
        "browserResearch": "< 30s for full analysis with validation"
      },
      "monitoring": {
        "realTime": [
          "response times",
          "memory usage",
          "database connections"
        ],
        "periodic": [
          "dependency audits",
          "security scans",
          "performance benchmarks"
        ],
        "triggered": [
          "research validation",
          "browser automation health"
        ]
      },
      "optimization": {
        "caching": "Redis for API responses, browser research results",
        "connectionPooling": "MongoDB and Redis with appropriate limits",
        "resourceManagement": "MCP server lifecycle management",
        "loadBalancing": "Multiple Perplexity API keys with rotation"
      }
    }
  },
  "implementationGuide": {
    "immediateActions": [
      "Update .cursorrules with generated configuration",
      "Configure repository secrets for PERPLEXITY_API_KEY and BROWSERBASE_API_KEY",
      "Enable Enhanced Perplexity Browser Research workflow",
      "Test browser research capabilities with /run-perplexity-research command"
    ],
    "weeklyTasks": [
      "Monitor research automation performance",
      "Review and update AI model selection based on usage patterns",
      "Validate browser research accuracy and source quality",
      "Optimize context awareness based on development patterns"
    ],
    "monthlyReview": [
      "Analyze research automation effectiveness",
      "Update MCP server configurations based on new capabilities",
      "Review and optimize performance targets",
      "Assess and update security research patterns"
    ],
    "troubleshooting": {
      "Browser research fails": "Check BROWSERBASE_API_KEY and network connectivity",
      "Research takes too long": "Reduce depth or disable browser validation",
      "Poor research quality": "Update domain filters and validation criteria",
      "Context window exceeded": "Optimize file inclusion patterns and exclusions"
    }
  }
}