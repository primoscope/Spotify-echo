# =============================================================================
# ðŸš€ N8N SELF-HOSTED SERVER CONFIGURATION
# Complete configuration for n8n with Spotify Echo integration
# =============================================================================

version: '3.8'

services:
  # N8N Automation Server
  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    container_name: n8n-echotune
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      # Core Configuration
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-secure_password}
      
      # Database Configuration (PostgreSQL)
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=${N8N_DATABASE_POSTGRES_HOST:-postgres}
      - DB_POSTGRESDB_PORT=${N8N_DATABASE_POSTGRES_PORT:-5432}
      - DB_POSTGRESDB_DATABASE=${N8N_DATABASE_POSTGRES_DATABASE:-n8n}
      - DB_POSTGRESDB_USER=${N8N_DATABASE_POSTGRES_USER:-n8n_user}
      - DB_POSTGRESDB_PASSWORD=${N8N_DATABASE_POSTGRES_PASSWORD:-n8n_password}
      
      # Security & Encryption
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-secure_encryption_key_change_this}
      - N8N_USER_MANAGEMENT_DISABLED=false
      - N8N_SECURE_COOKIE=false
      
      # API Configuration
      - N8N_API_ENABLED=true
      - N8N_API_KEY=${N8N_API_KEY}
      - N8N_WEBHOOK_URL=http://localhost:5678/
      
      # EchoTune AI Integration Variables
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=${REDIS_URL}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
      - BRAVE_API_KEY=${BRAVE_API_KEY}
      - GITHUB_PAT=${GITHUB_PAT}
      
      # Workflow Configuration
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=${REDIS_HOST:-redis}
      - QUEUE_BULL_REDIS_PORT=${REDIS_PORT:-6379}
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
      
      # Performance Settings
      - N8N_PAYLOAD_SIZE_MAX=16
      - N8N_METRICS=true
      - N8N_DIAGNOSTICS_ENABLED=true
      
      # Timezone
      - GENERIC_TIMEZONE=UTC
      
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
      - ./n8n/credentials:/home/node/.n8n/credentials
    depends_on:
      - postgres
      - redis
    networks:
      - n8n-network

  # PostgreSQL Database for N8N
  postgres:
    image: postgres:15
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${N8N_DATABASE_POSTGRES_DATABASE:-n8n}
      - POSTGRES_USER=${N8N_DATABASE_POSTGRES_USER:-n8n_user}
      - POSTGRES_PASSWORD=${N8N_DATABASE_POSTGRES_PASSWORD:-n8n_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - n8n-network

  # Redis for N8N Queue Management
  redis:
    image: redis:7-alpine
    container_name: n8n-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    networks:
      - n8n-network

volumes:
  n8n_data:
  postgres_data:
  redis_data:

networks:
  n8n-network:
    driver: bridge